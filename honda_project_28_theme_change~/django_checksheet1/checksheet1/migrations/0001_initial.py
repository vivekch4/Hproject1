# Generated by Django 5.2 on 2025-05-01 08:37

import checksheet1.models
import django.contrib.auth.models
import django.core.serializers.json
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="POCUpload",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pdf", models.FileField(upload_to=checksheet1.models.poc_upload_path)),
            ],
        ),
        migrations.CreateModel(
            name="ProductionDb",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Production_count", models.CharField(max_length=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("timestamp", models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name="RejectionAlertConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rejection_threshold", models.IntegerField(default=2)),
                (
                    "phone_numbers",
                    models.JSONField(
                        default=dict,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                    ),
                ),
                ("last_sms_sent", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Shifttime",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("shift_A_start", models.TimeField()),
                ("shift_A_end", models.TimeField()),
                ("shift_B_start", models.TimeField()),
                ("shift_B_end", models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("username", models.CharField(max_length=150)),
                ("employee_id", models.CharField(max_length=20, unique=True)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Admin"),
                            ("quality_incharge", "Quality Incharge"),
                            ("shift_incharge", "Shift Incharge"),
                            ("operator", "Operator"),
                        ],
                        default="admin",
                        max_length=20,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="CheckSheet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "line",
                    models.CharField(
                        choices=[("line_1", "Line 1"), ("line_2", "Line 2")],
                        max_length=10,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "require_level_3_approval",
                    models.BooleanField(
                        default=True,
                        help_text="Check if this sheet requires Level 3 approval (admin)",
                    ),
                ),
                (
                    "assigned_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="assigned_check_sheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_check_sheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "level_1_approver",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="level_1_assigned_checksheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "level_2_approver",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="level_2_assigned_checksheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CheckSheetImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="checksheet_images/")),
                (
                    "checksheet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="checksheet1.checksheet",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FilledCheckSheet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status_data", models.JSONField(default=dict)),
                (
                    "timestamp",
                    models.DateTimeField(
                        blank=True,
                        default=checksheet1.models.current_datetime,
                        null=True,
                    ),
                ),
                (
                    "shift",
                    models.CharField(
                        choices=[("A", "Shift A"), ("B", "Shift B"), ("C", "Shift C")],
                        max_length=1,
                    ),
                ),
                ("line", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "approval_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Level 1 Approval"),
                            ("level_1_approved", "Level 1 Approved"),
                            ("level_2_approved", "Level 2 Approved"),
                            ("level_3_approved", "Level 3 Approved"),
                            ("completed", "Completed"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("requires_level_3_approval", models.BooleanField(default=True)),
                (
                    "level_1_approval_timestamp",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "level_2_approval_timestamp",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "level_3_approval_timestamp",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("rejection_timestamp", models.DateTimeField(blank=True, null=True)),
                ("rejection_reason", models.TextField(blank=True, null=True)),
                ("send_acknowledgment", models.BooleanField(default=False)),
                (
                    "assigned_level_1_approver",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_level_1_checksheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "assigned_level_2_approver",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_level_2_checksheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "checksheet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="checksheet1.checksheet",
                    ),
                ),
                (
                    "level_1_approval",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="level_1_approved_checksheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "level_2_approval",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="level_2_approved_checksheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "level_3_approval",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="level_3_approved_checksheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "rejected_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="rejected_checksheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FormRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "shift",
                    models.CharField(
                        choices=[("A", "Shift A"), ("B", "Shift B"), ("C", "Shift C")],
                        max_length=1,
                    ),
                ),
                ("line", models.CharField(blank=True, max_length=50, null=True)),
                ("date", models.DateField()),
                ("reason", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Accepted", "Accepted"),
                            ("Rejected", "Rejected"),
                        ],
                        default="Pending",
                        max_length=10,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True,
                        default=checksheet1.models.current_datetime,
                        null=True,
                    ),
                ),
                ("visible_until", models.DateTimeField(blank=True, null=True)),
                (
                    "checksheet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="form_requests",
                        to="checksheet1.checksheet",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="form_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PageAccess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("page_name", models.CharField(max_length=100)),
                ("has_access", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PasswordResetRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("requested_at", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("pending", "Pending"), ("approved", "Approved")],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "new_password",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="POCReadStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("read", models.BooleanField(default=False)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "poc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="checksheet1.pocupload",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StarterSheet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "line",
                    models.CharField(
                        choices=[("line_1", "Line 1"), ("line_2", "Line 2")],
                        max_length=10,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "require_level_3_approval",
                    models.BooleanField(
                        default=True,
                        help_text="Check if this sheet requires Level 3 approval (admin)",
                    ),
                ),
                (
                    "assigned_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="assigned_starter_sheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_starter_sheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "level_1_approver",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="level_1_assigned_sheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "level_2_approver",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="level_2_assigned_sheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="pocupload",
            name="assigned_startersheets",
            field=models.ManyToManyField(
                blank=True, related_name="assigned_pocs", to="checksheet1.startersheet"
            ),
        ),
        migrations.CreateModel(
            name="FilledStarterSheet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status_data", models.JSONField(default=dict)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "shift",
                    models.CharField(
                        choices=[("A", "Shift A"), ("B", "Shift B"), ("C", "Shift C")],
                        max_length=1,
                    ),
                ),
                ("line", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "approval_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Level 1 Approval"),
                            ("level_1_approved", "Level 1 Approved"),
                            ("level_2_approved", "Level 2 Approved"),
                            ("level_3_approved", "Level 3 Approved"),
                            ("completed", "Completed"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("requires_level_3_approval", models.BooleanField(default=True)),
                (
                    "level_1_approval_timestamp",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "level_2_approval_timestamp",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "level_3_approval_timestamp",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("rejection_timestamp", models.DateTimeField(blank=True, null=True)),
                ("rejection_reason", models.TextField(blank=True, null=True)),
                (
                    "assigned_level_1_approver",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_level_1_sheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "assigned_level_2_approver",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_level_2_sheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "filled_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "level_1_approval",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="level_1_approved_sheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "level_2_approval",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="level_2_approved_sheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "level_3_approval",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="level_3_approved_sheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "rejected_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="rejected_sheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "startersheet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="checksheet1.startersheet",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Field",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "field_type",
                    models.CharField(
                        choices=[("text", "Text"), ("image", "Image")], max_length=50
                    ),
                ),
                (
                    "startersheet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fields",
                        to="checksheet1.startersheet",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StarterZone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("int", "Integer"),
                            ("float", "Float"),
                            ("checkbox", "Checkbox"),
                        ],
                        max_length=20,
                    ),
                ),
                ("min_value", models.CharField(blank=True, max_length=255, null=True)),
                ("max_value", models.CharField(blank=True, max_length=255, null=True)),
                ("unit", models.CharField(blank=True, max_length=50, null=True)),
                ("check_method", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="zone_images/"),
                ),
                ("standard", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "startersheet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="zones",
                        to="checksheet1.startersheet",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Zone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "input_type",
                    models.CharField(
                        choices=[
                            ("int", "Integer"),
                            ("float", "Float"),
                            ("checkbox", "Checkbox"),
                        ],
                        default="int",
                        max_length=10,
                    ),
                ),
                (
                    "checksheet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="zones",
                        to="checksheet1.checksheet",
                    ),
                ),
            ],
        ),
    ]
